<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="mul.cam.e.dao.MyAssetDao">

    <update id="setMyAccount">
        insert into account(account_number, user_id, bank_id, account_type_id, balance)
        values (#{account_number}, (SELECT user_id FROM user WHERE user_name=#{userName}), #{bankId}, #{accountTypeId}, #{balance});
    </update>

    <update id="setTransaction" parameterType="mul.cam.e.dto.TransactionDto">
        insert into transaction(account_id, amount, transaction_type, category, description, transaction_date)
        values (#{accountId}, #{amount}, #{transactionType}, #{category}, #{description}, #{transactionDate});
    </update>

    <select id="getAccountNum" parameterType="java.lang.String" resultType="integer">
        select account_id
        from account
        where account_number = #{accountNumber}
    </select>

    <update id="setStockHoldings">
        insert into stock_holdings(user_id, stock_symbol, stock_name, purchase_price, quantity, purchase_date)
        values (#{userId}, #{stockSymbol}, #{stockName}, #{purchasePrice}, #{quantity}, #{purchaseDate})
    </update>

    <select id="getTransactions" resultType="mul.cam.e.dto.TransactionDto">
        select
            t.account_id,
            t.amount,
            t.transaction_type,
            t.category,
            t.description,
            t.transaction_date
        from
            transaction t
                join
            account a on t.account_id = a.account_id
                join
            user u on a.user_id = u.user_id
        where
            u.user_id = #{userId}
        order by
            t.transaction_date desc
    </select>
    <select id="getBankTransactions" resultType="mul.cam.e.dto.BankTransactionDto">
        select
            t.account_id as accountId,
            a.account_number as accountNumber,
            t.amount,
            t.transaction_type as transactionType,
            t.category,
            t.description as description,
            t.transaction_date as transactionDate,
            b.bank_id as bankId
        from
            transaction t
                join
            account a on t.account_id = a.account_id
                join
            user u on a.user_id = u.user_id
                join
            bank b on a.bank_id = b.bank_id
        where
            u.user_id = #{userId}
        order by
            t.transaction_date desc;
    </select>

    <select id="totalAccount" parameterType="string" resultType="int">
        select sum(balance) as balance
        from account
        where user_id = (select user_id
                         from user
                         where user_name = #{userName});
    </select>

    <select id="totalStock" parameterType="string" resultType="int">
        select sum(purchase_price * quantity) as total_price
        from stock_holdings
        where user_id = (select user_id
                         from user
                         where user_name = #{userName});
    </select>

    <select id="totalRealestate" resultType="int">
        select sum(transaction_amount) * 100000000
        from sg_real
        where no = (select realestate_no
            from user
            where user_name = #{userName});
    </select>

    <select id="totalCar" resultType="int">
        select car_price
        from car
        where car_no = (select car_no
                        from user
                        where user_name = #{userName});
    </select>


</mapper>